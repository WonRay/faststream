/*
 * Copyright (c) 2008 Kasper Nielsen.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* 
 * This class was automatically generated by cake.bootstrap.view.GenerateAll 
 * Available in the https://github.com/cakeframework/cake-developers/ project 
 */
package org.cakeframework.internal.db.nodes.view.collectionview;

/**
 * This class has been autogenerated
 *
 * @author Kasper Nielsen
 */
public interface CollectionViewVisitable {

    void accept(CollectionViewVisitor visitor);

    interface CollectionViewVisitor {

        void any(CVT_Any node);

        void asStream(CV_AsStream node);

        void count(CV_Count node);

        void distinct(CV_Distinct node);

        void filter(CV_Filter node);

        void filterNulls(CV_FilterNulls node);

        void filterOnType(CV_FilterOnType node);

        void first(CVT_First node);

        void forEach(CVT_ForEach node);

        void gather(CV_Gather node);

        void groupBy(CV_GroupBy node);

        void isEmpty(CVT_IsEmpty node);

        void last(CVT_Last node);

        void map(CV_Map node);

        void mapToIndex(CV_MapToIndex node);

        void one(CVT_One node);

        void reduce(CVT_Reduce node);

        void reverse(CV_Reverse node);

        void shuffle(CV_Shuffle node);

        void size(CVT_Size node);

        void sortedAscending(CV_SortedAscending node);

        void sorted(CV_Sorted node);

        void sortedDescending(CV_SortedDescending node);

        void take(CV_Take node);

        void to(CVT_To node);

        void toList(CVT_ToList node);
    }
}
