/*
 * Copyright (c) 2008 Kasper Nielsen.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* 
 * This class was automatically generated by cake.bootstrap.view.GenerateAll 
 * Available in the https://github.com/cakeframework/cake-developers/ project 
 */
package io.faststream.query.db.nodes.view.collectionview;

import io.faststream.query.db.nodes.view.mapview.AbstractMapView;
import io.faststream.query.db.query.node.QueryOperationNode;
import io.faststream.query.db.query.node.QueryOperationNodeDefinition;
import io.faststream.query.db.query.node.defaults.CollectionQueryOperations;

public class CV_Count extends AbstractMapView implements CollectionViewVisitable {

    private static final long serialVersionUID = 1L;

    public CV_Count(QueryOperationNode parent) {
        super(parent);
    }

    public QueryOperationNodeDefinition getOperationPackage() {
        return QueryOperationNodeDefinition.create(CollectionQueryOperations.C_FREQUENCY_COUNT);
    }

    public String name() {
        return "count";
    }

    public int getNodeId() {
        return 1;
    }

    @Override
    public final int getNodeType() {
        return 1;
    }

    public void accept(CollectionViewVisitable.CollectionViewVisitor visitor) {
        visitor.count(this);
    }
}
